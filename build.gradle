buildscript {
	repositories {
		maven {
			name = 'Glass-Maven'
			url = "https://maven.glass-launcher.net/snapshots"
		}
		maven {
			name = 'Fabric'
			url = "https://maven.fabricmc.net/"
		}
		gradlePluginPortal()
		mavenCentral()
		maven {
			name = "Jitpack"
			url = 'https://jitpack.io/'
		}
	}
	dependencies {
		classpath 'net.fabricmc:fabric-loom:0.2.8-SNAPSHOT'
	}
}

plugins {
	id 'maven-publish'
}

apply plugin: "fabric-loom"

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

idea {
	module {
		downloadJavadoc = true
	}
}

eclipse {
	classpath {
		downloadJavadoc = true
	}
}

repositories {
	maven {
		name = 'Glass-Maven'
		url = "https://maven.glass-launcher.net/snapshots"
	}
	maven {
		name = 'HalfOf2'
		url = 'https://storage.googleapis.com/devan-maven/'
	}
	maven {
		name = 'Forge'
		url = 'https://maven.minecraftforge.net/'
	}
	maven {
		name = 'Jitpack'
		url = "https://jitpack.io/"
	}
	mavenCentral()
}

minecraft {
}

dependencies {
	/*
	 * Specially required libraries for Fabric.
	 */
	implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.0'
	annotationProcessor group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.0'
	implementation 'net.fabricmc:sponge-mixin:0.11.1+mixin.0.8.5'

	/*
	 * To change the versions see the gradle.properties file
	 */
	minecraft "com.mojang:minecraft:${project.minecraft_version}"

	/*
	 * Here workspace defines mappings to use.
	 * You can use other mappings, like Plasma or BIN-Mappings.
	 */
	mappings loom.fromCommit("calmilamsy/BIN-Mappings", "${project.yarn_mappings}") {spec ->
		spec.version = "b1.7.3-${project.yarn_mappings}"
	}

	/*
	 * Lombok Library.
	 *
	 * Adds some useful annotations for data classes, although does not add any dependencies.
	 */
	implementation /*Only*/ 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'

	/*
	 * Jetbrains Annotation Library.
	 *
	 * Adds some useful annotations for miscellaneous uses. does not add any dependencies,
	 * though people without the lib will be missing some useful context hints.
	 *
	 * You can remove if you don't want to use it.
	 */
	implementation 'org.jetbrains:annotations:16.0.2'

	/*
	 * Cursed-Fabric-Loader - fabric loader library.
	 */
	modImplementation("com.github.calmilamsy:cursed-fabric-loader:91f8c4c") {
		transitive false
	}

	///START API PART
	/*
	 * Optional, but really useful for creating content mods that add bunch of things to the game.
	 */

	/*
	 * SEARCH INDEXES IN:
	 * https://maven.glass-launcher.net/#/snapshots/net/modificationstation/StationAPI
	 */
	modImplementation("net.modificationstation:StationAPI:${project.stapi_version}") {
		exclude group: 'io.github.minecraft-cursed-legacy', module: 'cursed-fabric-loader'
	}

	implementation /*Only*/ 'org.apache.commons:commons-lang3:3.12.0'
	implementation /*Only*/ 'commons-io:commons-io:2.11.0'

	implementation "net.jodah:typetools:${project.typetools_version}"
	implementation "com.github.mineLdiver:expressions:${project.expressions_version}"
	implementation "com.github.mineLdiver:UnsafeEvents:${project.unsafeevents_version}"
	implementation "it.unimi.dsi:fastutil:${project.fastutil_version}"
	//noinspection GradlePackageUpdate
	implementation "com.github.ben-manes.caffeine:caffeine:${project.caffeine_version}"
	implementation "com.mojang:datafixerupper:${project.dfu_version}"

	///END API PART
	implementation "blue.endless:jankson:1.2.1"
	modImplementation('com.github.calmilamsy:HowManyItems-Fabric-Unofficial:1c6873a') {
		exclude module: 'StationAPI'
		exclude module: 'cursed-fabric-loader'
		exclude module: 'ModMenu'
	}
	modImplementation("com.github.calmilamsy:ModMenu:dcef643")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

//StationAPI uses Java 17 and higher.
tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
	from javadoc
	classifier = 'javadoc'
}

tasks.publishToMavenLocal.dependsOn(tasks.remapJar)

publishing {
	repositories {
		mavenLocal()
	}

	publications {
		mavenJava(MavenPublication) {
			artifactId project.archives_base_name
			artifact ("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar") {
				classifier null
				builtBy remapJar
			}

			artifact ("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}-dev.jar") {
				classifier 'dev'
				builtBy remapJar
			}
			pom.withXml {
				asNode().dependencies.dependency.each { dep ->
					if(dep.artifactId.last().value().last().toLowerCase() in ["cursed-fabric-loader", "stationapi"]) {
						assert dep.parent().remove(dep)
					}
				}
			}
		}
	}
}